name: Release ðŸ“¦

permissions:
  contents: write
  pull-requests: write

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Release - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: linux-arm64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu

          - release_for: linux-amd64
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - release_for: darwin-amd64
            os: macOS-latest
            target: x86_64-apple-darwin

          - release_for: darwin-arm64
            os: macOS-latest
            target: aarch64-apple-darwin

#          - release_for: windows-amd64
#            os: windows-latest
#            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.80.1

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set tag
        id: set_tag
        run: |
          # Extract the tag name from the full reference
          TAG_NAME=$(echo "${{ github.ref }}" | sed 's|.*/||')
          echo "TAG_NAME=$TAG_NAME" >> "$GITHUB_ENV"

      - name: Release Linux
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          rustup target add ${{ matrix.platform.target }}
          sudo apt-get -qq install musl-dev musl-tools pkg-config
          make package ARCH=${{ matrix.platform.release_for }} TARGET=${{ matrix.platform.target }} TAG=${{ env.TAG_NAME }}

      - name: Release MacOS
        if: matrix.platform.os == 'macOS-latest'
        run: |
          rustup target add ${{ matrix.platform.target }}
          cargo build --locked --release --target=${{ matrix.platform.target }}

#      - name: Build for Windows
#        if: matrix.platform.os == 'windows-latest'
#        run: |
#          cargo build --locked --release --target=${{ matrix.platform.target }}

#  release:
#    name: Release - ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [macos-latest, ubuntu-latest, windows-latest]
#    runs-on: ${{ matrix.os }}
#    steps:
##      - name: Set container tag
##        id: set_tag
##        run: |
##          # Extract the tag name from the full reference
##          IMAGE_TAG=$(echo "${{ github.ref }}" | sed 's|.*/||')
##          echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_ENV"
#
#      - name: Setup Rust
#        uses: dtolnay/rust-toolchain@v1
#        with:
#          toolchain: 1.80.1
#
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Linux setup dependencies
#        if: matrix.os == 'ubuntu-latest'
#        run: |
#          rustup target add x86_64-unknown-linux-musl
#          sudo apt-get -qq install musl-dev musl-tools pkg-config make
#
#      - name: MacOS setup dependencies
#        if: matrix.os == 'macOS-latest'
#        run: |
#          rustup target add aarch64-apple-darwin
#          rustup target add x86_64-apple-darwin
#
#      - name: Linux release
#        if: matrix.os == 'ubuntu-latest'
#        run: |
#          cargo build --locked --release --target=x86_64-unknown-linux-musl
#
#      - name: MacOS release
#        if: matrix.os == 'macOS-latest'
#        run: |
#          cargo build --locked --release --target=x86_64-apple-darwin
#          cargo build --locked --release --target=aarch64-apple-darwin
#
#      - name: Build for Windows
#        if: matrix.os == 'windows-latest'
#        run: |
#          cargo build --locked --release --target=x86_64-pc-windows-msvc